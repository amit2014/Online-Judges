/*
ID: vermapr1
PROG: <prog_name>
LANG: C++
*/

// #define TRUE FALSE haha now debug this
using namespace std;
#include <algorithm>
#include <iostream>
#include <iterator>
#include <sstream>
#include <fstream>
#include <cassert>
#include <climits>
#include <cstdlib>
#include <cstring>
#include <string>
#include <cstdio>
#include <vector>
#include <cmath>
#include <queue>
#include <deque>
#include <stack>
#include <map>
#include <set>
//BEGIN_TEMPLATE_BY_PRATYUSH_VERMA

//CONSTANT
#define INF (1<<31)-1
#define PI 3.1428571428571428571428571428571

//FUNC
#define MAX(i,j) (i)>(j)?(i):(j)
#define MIN(i,j) (i)<(j)?(i):(j)
#define REP(i,a) for((i)=0;(i)<(a);(i)++)
#define REP_(i,a) for((i)=0;(i)<=(a);(i)++)
#define FOR(i,a,b) for((i)=(a);(i)<(b);(i)++)
#define FOR_(i,a,b) for((i)=(a);(i)<=(b);(i)++)
#define VAR(V,init) __typeof(init) V=(init)
#define FOREACH(I,C) for(VAR(I,(C).begin());I!=(C).end();I++)
#define ALL(x) (x).begin(),(x).end()
#define SIZE(x) ((int)(x.size()))
#define LENGTH(x) ((int)(x.length()))
#define SZ(x) sizeof(x)
#define MEM(m,i) memset((m),(i),SZ(m))
#define PB(x,y) (x).push_back(y)
#define MP(x,y) make_pair(x,y)
#define V(x) vector < x >

//BITWISE
#define LASTSETBIT(x) x & ~(x-1)
#define TRAILZERO(x) __builtin_ctz(x)
#define LEADZERO(x) __builtin_clz(x)
#define COUNTSETBIT(x) __builtin_popcount(x)
#define GCD(x,y) __gcd(x,y)

typedef pair<int,int>   PII;
typedef pair<char,int>  PCI;
typedef pair<int,PII>   TRI;
typedef V( int )        VI;
typedef V( PII )        VII;
typedef V( TRI )        VTRI;
typedef V( string )     VS;
typedef long long       LL;
typedef long double     LD;

template<class T> void print(const vector<T> &v){ostringstream os; for(int i=0; i<v.size(); ++i){if(i)os<<' ';os<<v[i];} cout<<os.str()<<endl;}
template<class T, class U> T cast (U x) { ostringstream os; os<<x; T res; istringstream is(os.str()); is>>res; return res; }
template<class T> vector<T> split(string s, string x=" ") {vector<T> res; for(int i=0;i<s.size();i++){string a; while(i<(int)s.size()&&x.find(s[i])==string::npos)a+=s[i++]; if(!a.empty())res.push_back(cast<T>(a));} return res;}

inline void input( int &n ) { n=0; int ch=getchar(); while( ch < '0' || ch > '9' ) ch=getchar(); while( ch >= '0' && ch <= '9' ) n = (n<<3)+(n<<1) + ch-'0', ch=getchar(); }

//END_TEMPLATE_BY_PRATYUSH_VERMA
LL arr[100000007];
LL pow(int i, LL j)
{
    if(j==1) return i;
    if(j%2==0)
    return (pow(i,j/2)%100000007 * pow(i,j/2)%100000007 )%100000007 ;
    else
    return ((pow(i,j/2)%100000007 * pow(i,j/2)%100000007 )%100000007 * i%100000007 )%100000007 ;
}
int main()
{
    int test;
    LL i;
    LL res;
    cin>>test;
//    cout<<pow(5,2l)<<endl;
//    cout<<pow(5,10l)<<endl;
//    cout<<" 24 : "<<pow(3,24)<<" ";
//    cout<<pow(2,25);
    while(test--)
    {
        cin>>i; i++;
/*        LL a=(pow(3,i-1)+1)%100000007 ;
        LL b=pow(2,i)%100000007;
        LL k;
        if(a<b)
        {
            a+=100000007;
            k=a-b;
            k%=100000007;
        }
        else
        {
            a%=100000007;
            b%=100000007;
            k=a-b;
        }
//       printf("%d ",k/2.0);
        cout<<  (k)/2.0<<" ";

*/
        int x= (pow(3,i-1)-pow(2,i))%100000007;
        if(x<0)
        x+=100000007;
        cout<<  ((1 + x)%100000007)/2.0<<" ";
/*        int c = (pow(4,i)%100000007+(6*pow(2,i))%100000007)%100000007;
        int d= (4*(pow(3,i)+1))%100000007;
//        cout<<"c = "<<c<<" d = "<<d<<endl;
        if(c<d)
        {
            c+=100000007;
            k=c-d;
            k%=100000007;
        }
        else
        {
            c%=100000007;
            d%=100000007;
            k=c-d;
        }
//        printf("%lld\n",k/8.0);
        cout<< (k)/8.0<<endl;
*/
        x=         (((pow(4,i)%100000007)  - (4*pow(3,i))%100000007 )%100000007   +  (6*pow(2,i))%100000007)%100000007 ;
        if(x<0)
        x+=100000007;
                cout<< ( x-4)/8.0<<endl;
        
        
//        cout<<( pow(3,i-1)/2.0)-(pow(2,i-1) ) <<endl;
//       cout<< 9* pow(3,i/2)-4*pow(2,i+1/2)<<endl;
//        cout<< (pow(2.0,i)*(pow(2.0,i) - 1)/2 - pow(3.0,i) + pow(2.0,i))<<endl;
//        cout<<  (exp(3*i)-(3*exp(2*i))+(3*exp(i))-1)/2<<endl;

    }

	//system("pause");
	return 0;
}










