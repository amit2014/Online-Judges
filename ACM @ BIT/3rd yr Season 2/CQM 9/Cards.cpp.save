/*
ID: vermapr1
PROG: <prog_name>
LANG: C++
*/

// #define TRUE FALSE haha now debug this
using namespace std;
#include <algorithm>
#include <iostream>
#include <iterator>
#include <sstream>
#include <fstream>
#include <cassert>
#include <climits>
#include <cstdlib>
#include <cstring>
#include <string>
#include <cstdio>
#include <vector>
#include <cmath>
#include <queue>
#include <deque>
#include <stack>
#include <map>
#include <set>
#define INF (1<<31)-1
#define PI 3.1428571428571428571428571428571

#define MAX(i,j) (i)>(j)?(i):(j)
#define MIN(i,j) (i)<(j)?(i):(j)
#define REP(i,a) for((i)=0;(i)<(a);(i)++)
#define REP_(i,a) for((i)=0;(i)<=(a);(i)++)
#define FOR(i,a,b) for((i)=(a);(i)<(b);(i)++)
#define FOR_(i,a,b) for((i)=(a);(i)<=(b);(i)++)
#define VAR(V,init) __typeof(init) V=(init)
#define FOREACH(I,C) for(VAR(I,(C).begin());I!=(C).end();I++)
#define ALL(x) (x).begin(),(x).end()
#define SIZE(x) ((int)(x.size()))
#define LENGTH(x) ((int)(x.length()))
#define SZ(x) sizeof(x)
#define MEM(m,i) memset((m),(i),SZ(m))
#define PB(x,y) (x).push_back(y)
#define MP(x,y) make_pair(x,y)
#define V(x) vector < x >
typedef pair<int,int>   PII;
typedef pair<char,int>  PCI;
typedef pair<int,PII>   TRI;
typedef V( int )        VI;
typedef V( PII )        VII;
typedef V( TRI )        VTRI;
typedef V( string )     VS;
typedef long long       LL;
typedef long double     LD;


int main()
{
    int i,j,k,p,q,n;
    string s;
    map<string, int> m;
    map<string, int> mm;
    vector<int, pair<int,string> > v;
    while(cin>>n) {
        m.clear();
        mm.clear();
        REP(i,n) {
            cin>>s>>j;
            if(s=="Arka")
            {
                m[s]=-1;
                mm[s]=-1;
                continue;
            }
            m[s]+=j;
            mm[s]=i;
        }
        int max=-1,step=INF;
        string temp;
        if(m["Arka"]==-1) { cout<<"Arka\n"; continue; }
        FOREACH(it, m) {
            PB( v, MP( (*it).second, mm[(*it).first]),(*it).first));
        }
        sort(ALL(v));
        cout<<v[0].second<<endl;
    }
//	system("pause");
	return 0;
}




























